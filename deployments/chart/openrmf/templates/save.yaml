apiVersion: apps/v1
kind: Deployment
metadata:
  name: openrmf-save
  namespace: {{.Values.namespace}}
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: save-api
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/revision: "{{ .Release.Revision }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: helm
spec:
  selector:
    matchLabels:
      run: openrmf-save
  replicas: 1
  template:
    metadata:
      labels:
        run: openrmf-save
    spec:
      containers:
      - name: openrmf-save
        image: cingulara/openrmf-api-save:{{.Values.saveImage}}
        ports:
        - name: web-port
          containerPort: 8080
        readinessProbe:
          tcpSocket:
            port: web-port
          initialDelaySeconds: 5
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /healthz
            port: web-port
          initialDelaySeconds: 3
          periodSeconds: 30
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: ASPNETCORE_URLS
          value: http://*:8080
        - name: NATSSERVERURL
          value: nats://natsserver:4222
        - name: JWT-AUTHORITY
          value: {{.Values.identityProviderURL}}/realms/{{.Values.identityProviderRealm}}
        - name: JWT-CLIENT
          value: {{.Values.identityProviderClientId}}
        - name: DBCONNECTION
          valueFrom:  
            secretKeyRef:
              name: checklistdbsecret
              key: appConnection
        - name: DB
          valueFrom:  
            secretKeyRef:
              name: checklistdbsecret
              key: initDBName
        - name: DBTYPE
          value: {{.Values.checklistdbtype}}
        resources:
          limits:
            memory: "750Mi"
            cpu: "500m"
          requests:
            memory: "250Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: openrmf-save
  namespace: {{.Values.namespace}}
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: save-api
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/revision: "{{ .Release.Revision }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: helm
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: openrmf-save
  sessionAffinity: None
  type: {{.Values.serviceType | default "NodePort"}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openrmf-save-ingress
  namespace: {{.Values.namespace}}
  labels:
    app: openrmf
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: save-api-ingress
    release: {{ .Release.Name }}
    revision: "{{ .Release.Revision }}"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
spec:
  rules:
  - host: {{.Values.dnsName}}
    http:
      paths:
      - path: /api/save(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: openrmf-save
            port:
              number: 8080
{{ if .Values.useprometheusoperator }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: openrmf-save-api-metrics
  namespace: {{.Values.namespace}}
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: save-api
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/revision: "{{ .Release.Revision }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: helm
    {{ .Values.servicemonitormatchlabelname }}: {{ .Values.servicemonitormatchlabelvalue }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: save-api
  endpoints:
  - port: https
    interval: 15s
    path: /metrics
  namespaceSelector:
    matchNames:
    - {{.Values.namespace}}
{{ end }}
