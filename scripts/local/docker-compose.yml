version : '3.8'
 
services:
  web:
    image: nginxinc/nginx-unprivileged:1.20
    container_name: openrmf-web
    command: [nginx-debug, '-g', 'daemon off;']
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  mongo:
    image: cingulara/mongo:4.4.4-nonroot
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=myp2ssw0rd
      - MONGO_INITDB_DATABASE=openrmf
    volumes:
      - ./initializedbs.js:/docker-entrypoint-initdb.d/initialize.js:ro
    networks:
      - openrmf-local

  nats: 
    image: nats:2.2.6-alpine
    container_name: nats
    command: -m 8222
    restart: always
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    networks:
      - openrmf-local

  natspromexporter: 
    image: synadia/prometheus-nats-exporter:0.6.2
    container_name: nats-exporter-prometheus
    command: -varz -connz -subz http://nats:8222
    restart: always
    ports:
      - 7777:7777
    networks:
      - openrmf-local

  nats-client-metrics: 
    image: cingulara/nats-client-metrics:1.0.1
    container_name: nats-client-metrics
    restart: always
    ports:
      - 7778:7778
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:7778
      - NATSMETRICSURL=http://nats:8222
    networks:
      - openrmf-local

  nginx-metrics: 
    image: nginx/nginx-prometheus-exporter:0.9.0
    container_name: nginx-metrics
    restart: always
    command:
      - -nginx.scrape-uri
      - http://web:8080/status
    ports:
      - 9113:9113
    networks:
      - openrmf-local

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - openrmf-local

  grafana: 
    image: grafana/grafana:8.2.2
    container_name: grafana
    #command:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=1qaz2WSX3edc4RFVgr@fana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ../grafana/dashboards/:/etc/grafana/provisioning/dashboards/:ro
      - ../grafana/datasources/:/etc/grafana/provisioning/datasources/:ro
    networks:
      - openrmf-local

  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=myp2ssw0rd
    networks:
      - openrmf-local

### put all the networks here
networks:
  openrmf-local:
